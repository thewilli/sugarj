module jasmin/JasminXT-Header
imports jasmin/lexical/JasminXT-Names jasmin/lexical/JasminXT-Numbers jasmin/lexical/JasminXT-Strings
        jasmin/lexical/JasminXT-Descriptors jasmin/lexical/JasminXT-Signatures

exports
  context-free syntax
    BytecodeSpec SourceSpec ClassSpec SuperSpec ImplementsSpec* SignatureSpec EnclosingSpec DeprecatedSpec -> JasminHeader {cons("DJ_JBCHeader")}

  context-free syntax
    ".bytecode" MajorVersion MinorVersion -> BytecodeSpec {cons("DJ_JBCVersion")}
                                          -> BytecodeSpec {cons("None")}
    Int                                   -> MajorVersion {cons("DJ_Major")}
    "." Int                               -> MinorVersion {cons("DJ_Minor")}
                                          -> MinorVersion {cons("None")}
    ".source" String                      -> SourceSpec   {cons("DJ_JBCSource")}
                                          -> SourceSpec   {cons("None")}

  context-free syntax
    ".class" ClassAccess* ClassName     -> ClassSpec      {cons("DJ_JBCClass")}
    ".interface" ClassAccess* ClassName -> ClassSpec      {cons("DJ_JBCInterface")}
    "public"                            -> ClassAccess    {cons("PUBLIC")}
    "final"                             -> ClassAccess    {cons("FINAL")}
    "interface"                         -> ClassAccess    {cons("DJ_INTERFACE")}
    "abstract"                          -> ClassAccess    {cons("ABSTRACT")}
    "super"                             -> ClassAccess    {cons("DJ_SUPER")}
    ".super" ClassName                  -> SuperSpec      {cons("DJ_JBCSuper")}
    ".implements" ClassName             -> ImplementsSpec {cons("DJ_JBCImplements")}

  context-free syntax
    ".signature" ClassSignature            -> SignatureSpec  {cons("DJ_JBCSignature")}
                                           -> SignatureSpec  {cons("None")}
    ".enclosing" "method" MethodDescriptor -> EnclosingSpec  {cons("DJ_JBCEnclosing")}
                                           -> EnclosingSpec  {cons("None")}
    ".deprecated"                          -> DeprecatedSpec {cons("DJ_JBCDeprecated")}
                                           -> DeprecatedSpec {cons("None")}

  lexical restrictions
    ".bytecode" ".source" ".class" ".interface" "public" "final" "interface"
    "abstract" "super" ".super" ".implements" ".signature" ".enclosing"
    ".deprecated" -/- ~[\ \t]

/**
 * 6.5: "Determining the Meaning of a Name"
 *
 * @author Martin Bravenboer <martin@cs.uu.nl>
 */
module org/sugarj/dryad/compiler/dryad/reclassify/Main
imports
  libstratego-lib
  libjava-front
  
  org/sugarj/dryad/compiler/dryad/lib-ext/list  
  
  org/sugarj/dryad/compiler/dryad/model/bytecode-class
  org/sugarj/dryad/compiler/dryad/model/source-class
  org/sugarj/dryad/compiler/dryad/model/classpath
  org/sugarj/dryad/compiler/dryad/model/reference-ast  
 
  org/sugarj/dryad/compiler/dryad/reclassify/Body
  org/sugarj/dryad/compiler/dryad/reclassify/Check 
  org/sugarj/dryad/compiler/dryad/reclassify/Header

  org/sugarj/dryad/compiler/dryad/util/jtree
  org/sugarj/dryad/compiler/dryad/util/option

strategies

  /**
   * Reclassify header of a compilation unit.
   *
   * @type List(CompilationUnit Object) -> List(CompilationUnit Object)
   */
  dryad-reclassify =
    {| HasBeenReclassified :
      /**
       * First, reclassify all the import declarations of the compilation units.
       */
      map(
        apply-to-reference(CompilationUnit(id, map(dryad-reclassify-header), id))
      )
  
      /**
       * Next, reclassify all the type declarations in a maybe. This maybe is used to avoid
       * reclassification: reclassification of a type declaration can indirectly lead to
       * reclassification of other classes.
       */
    ; map(
        apply-to-reference(CompilationUnit(id, id, map(dryad-reclassify-all-class-declarations <+ ?Semicolon())))
      )

      /**
       * Check if everything has been reclassified and qualified.
       */
    ; where(
        map(
          get-ast
          ; check-ambnames
          ; check-qualifiers
        )
      )

    |}
      
  dryad-maybe-reclassify(s) =
    HasBeenReclassified
    <+ if IsBeingReclassified then
         log(|Error(), "Cyclic dependency involving", <get-canonical-name>)
         ; fail
       else
         ?this
         ; {| IsBeingReclassified :
             rules(IsBeingReclassified : this)
             ; s
             ; rules(HasBeenReclassified : this)
           |}
       end

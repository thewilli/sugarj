/**
 * dryad-compiler rich bytecode assembly.
 *
 * Translates 'rich bytecode' to regular Java bytecode.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/backend/emit/asm

imports libstratego-lib
        org/sugarj/dryad/compiler/dryad
        org/sugarj/dryad/compiler/dryadcompiler/backend/asm/-
        org/sugarj/dryad/compiler/dryadcompiler/backend/asm/instructions/-
        org/sugarj/dryad/compiler/dryadcompiler/backend/asm/transform/-
        org/sugarj/dryad/compiler/dryadcompiler/lib-ext/-
        org/sugarj/languages/Java-Bytecode

strategies

  bc-asm = bc-asm(dryad-compiler-error)

  /**
   * Translates 'rich bytecode' to regular Java bytecode.
   * Usually invoked implicitly when compiling or emitting code.
   *
   * @param onfailure  Strategy that gets an DryadError or DryadWarning term for
   *                   each error or warning, may fail the entire strategy.
   *                   Default: dryad-compiler-error
   */
  bc-asm(onfailure) =  
    bc-asm-scope(
      onfailure
    ,
      rec rec(
        bc-register-params-wrap(
          Method(id, id, id, Attributes(map(rec)))
        )
      <+ // TODO: Record this & super type
        ClassFile(id, id, id, id, id, id, rec, rec, id)
      <+
        bc-asm-method-body
      <+
        is-rich-bc-instructions;
        bc-asm-instructions
      <+
        not(is-list);
        bc-apply-to-wrap(rec)
      <+
        all(rec);
        try(strip-bytecode-tags)
      )
    )

/**
 * dryad-compiler catch wrap rewriting strategies.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/backend/asm/catch-wraps

imports org/sugarj/dryad/compiler/dryadcompiler/backend/asm/transform/traverse

strategies

  /**
   * Record all exception catch blocks to ExceptionEntries rules,
   * and flatten the input code.
   *
   * @note Must be called from within bc-asm-record-labels-wrap.
   */
  bc-asm-catch-wraps =
    bc-number-wrapped({
      if ?(CatchWrap(catches, body), (b1, b2)) then
        <list-loop(bc-asm-catch-wraps-add(|b1, <dec> b2))> catches;
        !body
      else
        Fst // ignore other ops
      end
    })
  
  /** @internal */
  bc-asm-catch-wraps-add(|b1, b2) =
    Catch(
      LabelPos => pos
    , if(Any, ?type, type := ObjectType(<id>))
    );
    rules(
      ExceptionEntries :+= Entry(Range(b1, b2), Handler(pos), CatchType(type))
    )

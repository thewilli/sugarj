/**
 * dryad-compiler bytecode flattening/cleanup strategies.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/backend/asm/transform/flatten

strategies
  
  /**
   * Flatten all superfluous inner lists and label wrappers that may exist in
   * a list of bytecode instructions.
   *
   * @see strip-bytecode-tags  Flattens and removes bytecode tags.
   */
  flatten-bytecode =
    flatten-list(try(
      \Labeled(Id(l), body) -> [Label(l) | <as-list; flatten-bytecode> body]\      
    <+
      bc-apply-to-wrap(flatten-bytecode)    
    ))
  
  /**
   * Strip all Trace and any other metadata tags from a list of bytecode
   * instructions, as long as they don't affect the semantics.
   *
   * @see trace-terms-to-annos  Puts tags in annotations instead of removing them.
   * @see strip-trace-tags      Topdown removal of Trace/EndTrace tags.
   */
  strip-bytecode-tags =
    flatten-list(try(
      ?Trace(_, <strip-bytecode-tags>)
    <+
      ?EndTrace(<strip-bytecode-tags>)
    <+
      \Labeled(Id(l), body) -> [Label(l) | <as-list; strip-bytecode-tags> body]\
    <+
      Final(id); ![]
    ))

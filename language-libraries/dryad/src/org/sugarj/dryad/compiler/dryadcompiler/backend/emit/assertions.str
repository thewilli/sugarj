/**
 * dryad-compiler emit assert statements.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/backend/emit/assertions

strategies // TODO2: Support java.lang.Boolean assert argument

  emit-java(emit):
    |[ assert e; ]| ->
    |[ getstatic <CurrentClassName>.$assertionsDisabled : boolean;
       ifne end;
         <emit> e;
         ifne end;
           new java.lang.AssertionError;
           dup;
           invokespecial java.lang.AssertionError.<init>(void);
           athrow;
       end:
    ]|
    where end := <new-label> "endassert";
          ensure-assertions-field

  emit-java(emit):
    |[ assert e : ~message; ]| ->
    |[ getstatic <CurrentClassName>.$assertionsDisabled : boolean;
       ifne end;
         <emit> e;
         ifne end;
           new java.lang.AssertionError;
           dup;
           <emit> message;
           invokespecial java.lang.AssertionError.<init>(~messagetype : void);
           athrow;
       end:
    ]|
    where end         := <new-label> "endassert";
          ensure-assertions-field;
          
          if <is-primitive-type> <type-attr> message then
            messagetype := <type-attr> message
          else
            messagetype := ObjectType("java.lang.Object")
          end
  
  /** Ensures a $assertionsDisabled field exists and is initialized in this class. */
  ensure-assertions-field =
    initializer := |[
     static <clinit> (void) [
       ldc true;
       ldc <CurrentClassName> : class;
       invokevirtual java.lang.Class.desiredAssertionStatus(boolean);
       sub; // flip boolean
       putstatic <CurrentClassName>.$assertionsDisabled : boolean;
       return
     ]
    ]|;
    
    field := |[
      static final synthetic $assertionsDisabled : boolean
    ]|;
    
    if not(<elem> (field, <bagof-AddedClassMembers>)) then
      rules(
        AddedClassMembers :+= field
        AddedClassMembers :+= initializer
      )
    end

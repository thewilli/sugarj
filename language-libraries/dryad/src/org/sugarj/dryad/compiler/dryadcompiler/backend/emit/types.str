/**
 * dryad-compiler emit types.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/backend/emit/types

strategies

  emit-java(emit) =
    source-type-to-bytecode-type
  
  /**
   * Converts a Java source type to a bytecode type.
   * 
   * @note 'emit' should always be preferred over this strategy,
   *       for its error handling and extensibility properties.
   * @see  bytecode-type-to-source-type
   */
  source-type-to-bytecode-type =
    rec rec(
      Void
    + Null
    + is-primitive-type
    + ArrayType(rec)
    + \ClassType     (type, _) -> ObjectType(<rec> type)\
    + \InterfaceType (type, _) -> ObjectType(<rec> type)\
    + \TypeName(inner, Id(name)) -> <conc-strings> (<rec> inner, "$", name)\       
    + \TypeName(PackageName(names), name) -> string
       where <conc> (names, [name]);
             map(?Id(<id>));
             separate-by(|".");
             concat-strings => string\
    
    // HACK: assume typevar always has 'object' upper bound
    //       ideally the frontend would annotate this information...
    + \TypeVar(_, _) -> ObjectType("java.lang.Object")\
    )
    
  emit-java(emit):
    |[ reft.class ]| ->
    |[ ldc ~type : class ]|
    where <emit> reft => ObjectType(type)

  emit-java(emit):
    |[ primt.class ]| ->
    |[ getstatic ~type.TYPE : java.lang.Class ]|
    where type := <boxing-conversion-of-type; emit> primt
  
  emit-java(emit):
    |[ void.class ]| ->
    |[ getstatic java.lang.Void.TYPE : java.lang.Class ]|

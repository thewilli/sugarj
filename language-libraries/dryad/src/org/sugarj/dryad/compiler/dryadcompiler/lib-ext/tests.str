/**
 * Test suite strategies.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/lib-ext/tests

imports
  libstratego-lib
  org/sugarj/dryad/compiler/dryad

strategies

  /**
   * Execute a unit test.
   *
   * This strategy is designed to act as an interface to the standard testing
   * strategies, and may act as apply-test or as apply-check, depending on the
   * 'expected' parameter.
   *
   * Will exit the program if <set-config> ("--fail-fast", "on") is declared;
   * see fail-fast-option.
   *
   * @param expected  Either: a static build strategy to build the expected term,
   *                          or a matching strategy to check if the output
   *                          is correct.
   *
   * @note This strategy uses some heuristics to determine the type of
   *       'expected' strategy used. This is not 100% fool-proof, but
   *       always works as long as 'expected' either matches or performs a
   *       static build (not both), which means it should always work for
   *       normal unit tests. In the worst case, it will fail a working test.
   */
  do-test(name, s, in-term, expected) =
    log-timed(
      apply-and-check(
        restore(name, <print-failure> "Specify a test name");
        if-verbose2(<conc-strings> ("*** ", <as-string>, " ***")) // stand out among messages
      , s
      , in-term
      , ?out;
        expected => out';
        if not(!out => out') then
          // 'expected' built a term, but no match; need to know more about 'expected'
          scoped-set-config(!"--verbose", !-1,
            <expected> <newname> "BogusTerm" <+ !out
          );
          if ?out' then // 'expected' was term-builder
            <print-failure(|"  expected:     ")> out';
            fail
          end
        end
      );
      
      if (id, not(0)) then
        if-switch-on(!"fail-fast", !"off",
          log(|Critical, <conc-strings> ("Aborting at test ", <name>));
          fail
        )
      end
    | <name <+ !"?">, 0
    )

  /**
   * Apply a test, expecting failure.
   *
   * Will exit the program if <set-config> ("--fail-fast", "on") is declared;
   * see fail-fast-option.
   */
  do-test-fail(name, s, in-term) =
    log-timed(
      apply-and-fail(
        restore(name, <print-failure> "A test name must be specified");
        if-verbose2(<conc-strings> ("*** ", <id>, " ***"))
      , s
      , in-term
      );
      if (id, not(0)) then
        if-switch-on(!"fail-fast", !"off",
          log(|Critical, <conc-strings> ("Aborting at test ", <name>));
          fail
        )
      end
    | <name <+ !"?">, 0
    )
  
  fail-fast-option =
    SwitchOption(|"fail-fast", "off", "exit test suite after the first failing test")

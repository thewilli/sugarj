/**
 * dryad-compiler source trace wrapper tags flattening / removal.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module org/sugarj/dryad/compiler/dryadcompiler/util/trace/flatten

imports
  org/sugarj/dryad/compiler/dryadcompiler/lib-ext/-
  org/sugarj/languages/Java-Bytecode

signature constructors

  // Special constructors for use in annotations only
  Trace    : Term -> Trace
  EndTrace : EndTrace

strategies

  /**
   * Remove all source trace tags in a tree.
   *
   * @see trace-terms-to-annos  Don't remove, but move trace tags to annotations.
   */
  strip-trace-tags =
    rec rec(
      try(trace-annos-to-terms);
      (?Trace(_, <rec>) + ?EndTrace(<rec>))
    <+
      is-list; flatten-list(rec)
    <+
      all(rec)
    )

  /**
   * Flatten all EndTrace and Trace terms by moving them to the
   * term's annotation. This allows easier analysis and emitting,
   * but can also increase the tree size for wraps that contain
   * multiple terms (e.g., Trace(a, [b,c,d])).
   *
   * @see trace-annos-to-terms
   * @see strip-bytecode-tags
   */
  trace-terms-to-annos =
    flatten-list(try(
      \Trace(old, <id>){a*} -> <map(!<id>{^[Trace(old) | a*]})>\
    <+
      \Trace(old, <id>){a*} -> <id>{^[Trace(old) | a*]}\
    <+
      \EndTrace(<id>){a*} -> <map(!<id>{^[EndTrace | a*]})>\
    <+
      \EndTrace(<id>){a*} -> <id>{^[EndTrace | a*]}\
    ))    
  
  /**
   * Restore EndTrace and Trace terms previously hidden by
   * trace-terms-to-annos.
   *
   * @see trace-terms-to-annos
   */
  trace-annos-to-terms =
    ?input;
    get-annos(EndTrace);
    
    filter(not(EndTrace));
    !EndTrace(input {^<id>})
  <+
    ?input;
    get-annos(?Trace(old));
    
    filter(not(?Trace(_)));
    !Trace(old, input {^<id>})
